- name: Configure VPN Tunnel (should only be run on single use slaves)
  hosts: "{{ target_hosts | default('localhost') }}"
  tasks:
    - name: Configure and start VPN client
      block:
        # Use shell because python-apt isn't available so the apt module fails.
        # I don't want to add python-apt to one of the more general slave setup
        # scripts as it depends on python. We want to reduce the number of deps
        # installed on general slaves to the bare minimum.
        - name: Install apt packages
          shell: |
            apt-get update
            apt-get install -y vpnc
          register: install_packages
          until: install_packages is success
          retries: 5
          delay: 2
          tags:
            - skip_ansible_lint


        - name: Template vpnc config
          template:
            src: vpnc.conf.j2
            dest: /etc/vpnc/{{ vpn_name }}.conf

        - name: Template vpnc systemd service
          template:
            src: vpnc.service.j2
            dest: /lib/systemd/system/vpnc.{{ vpn_name }}.service

        - name: Start VPN
          block:
            - name: Start vpnc service
              systemd:
                enabled: yes
                service: vpnc.{{ vpn_name }}.service
                daemon_reload: yes
                state: restarted
              register: vpnc_restart
              until: vpnc_restart is success
              retries: 5
              delay: 2

          rescue:
            - name: Output failed task information
              debug: var=vpnc_restart

            - name: Get vpnc service status
              command: systemctl status vpnc.{{ vpn_name}}.service
              register: vpnc_status
              failed_when: false
              changed_when: false

            - name: Output vpnc service status
              debug: var=vpnc_status

            - name: Get system log
              command: journalctl -xe
              register: system_log
              changed_when: false

            - name: Output system log
              debug: var=system_log

            - name: Exit with failure
              fail: msg="vpnc service failed to start"

#    - name: Test connectivity
#      uri:
#        url: "{{ connectivity_test_url }}"
#        method: GET
#        status_code:
#          - 300
#          - 200
#        validate_certs: no
#      changed_when: false
#      register: connectivity_test
#      until: connectivity_test is success
#      retries: 5
#      delay: 2
